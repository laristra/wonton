#-----------------------------------------------------------------------------
# This file is part of the Ristra Wonton project.
# Please see the license file at the root of this repository, or at:
#    https://github.com/laristra/wonton/blob/master/LICENSE
#
# Wonton configuration file template
#
#-----------------------------------------------------------------------------

set(WONTON_VERSION_MAJOR @WONTON_VERSION_MAJOR@ CACHE STRING "Major version of WONTON")
set(WONTON_VERSION_MINOR @WONTON_VERSION_MINOR@ CACHE STRING "Minor version of WONTON")
set(WONTON_VERSION_MINOR @WONTON_VERSION_PATCH@ CACHE STRING "Patch version of WONTON")


# Compiler Definitions
set(CMAKE_C_COMPILER @CMAKE_C_COMPILER@ CACHE FILEPATH "C Compiler used for compiling WONTON")
set(CMAKE_CXX_COMPILER @CMAKE_CXX_COMPILER@ CACHE FILEPATH "CXX Compiler used for compiling WONTON")


# Compiler Flags
set(CMAKE_C_FLAGS "@CMAKE_C_FLAGS@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_C_FLAGS_DEBUG "@CMAKE_C_FLAGS_DEBUG@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_C_FLAGS_RELEASE "@CMAKE_C_FLAGS_RELEASE@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_C_FLAGS_MINSIZEREL "@CMAKE_C_FLAGS_MINSIZEREL@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "@CMAKE_C_FLAGS_RELWITHDEBINFO@" CACHE STRING "WONTON C compiler flags")

set(CMAKE_CXX_FLAGS "@CMAKE_CXX_FLAGS@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_CXX_FLAGS_DEBUG "@CMAKE_CXX_FLAGS_DEBUG@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_CXX_FLAGS_RELEASE "@CMAKE_CXX_FLAGS_RELEASE@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_CXX_FLAGS_MINSIZEREL "@CMAKE_CXX_FLAGS_MINSIZEREL@" CACHE STRING "WONTON C compiler flags")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "@CMAKE_CXX_FLAGS_RELWITHDEBINFO@" CACHE STRING "WONTON C compiler flags")

# WONTON Build info
set(WONTON_BUILD_TYPE @CMAKE_BUILD_TYPE@ CACHE STRING "DEPRECATE? WONTON build type")

# Wonton installation path
set(WONTON_DIR @CMAKE_INSTALL_PREFIX@ CACHE PATH "Path to WONTON INSTALLATION")
set(WONTON_ROOT @CMAKE_INSTALL_PREFIX@ CACHE PATH "Path to WONTON INSTALLATION")

# WONTON library 
set(WONTON_LIBRARY @WONTON_LIBRARY@ CACHE STRING "Name of the Wonton library")

# WONTON includes
set(WONTON_INCLUDE_DIR @CMAKE_INSTALL_PREFIX@/include CACHE PATH "WONTON include file locations")

# WONTON options
set(WONTON_ENABLE_MPI @WONTON_ENABLE_MPI@ CACHE BOOL "Enable MPI Parallelism for Wonton")

# Thrust options
set(ENABLE_THRUST @ENABLE_THRUST@ CACHE BOOL "Enable MPI Parallelism for Wonton")
set(THRUST_DIR @THRUST_DIR@ CACHE BOOL "Thrust directory")
set(THRUST_BACKEND @THRUST_BACKEND@ "Thrust backend")

set(ENABLE_FleCSI @ENABLE_FleCSI@ CACHE BOOL "Use FleCSI")
set(FleCSI_DIR @FleCSI_DIR@ CACHE PATH "FleCSI installation root")
set(FleCSI_ROOT @FleCSI_DIR@ CACHE PATH "FleCSI installation root")


set(ENABLE_Jali @ENABLE_Jali@ CACHE STRING "Use Jali")
set(Jali_DIR @Jali_DIR@ CACHE PATH "Jali installation root")
set(Jali_ROOT @Jali_ROOT@ CACHE PATH "Jali installation root")

set(LAPACKE_DIR @LAPACKE_DIR@ CACHE PATH "LAPACKE installation dir")
set(LAPACKE_ROOT @LAPACKE_DIR@ CACHE PATH "LAPACKE installation dir")

set(LAPACKE_LIBRARIES @LAPACKE_LIBRARIES@ CACHE STRING "LAPACKE libraries")
set(LAPACK_INCLUDE_DIRS @LAPACKE_INCLUDE_DIRS@ CACHE STRING "LAPACKE include dirs")

set(Boost_FOUND @Boost_FOUND@ CACHE BOOL "Boost status")
set(Boost_DIR @Boost_DIR@ CACHE PATH "Boost installation directories")
set(Boost_ROOT @Boost_ROOT@ CACHE PATH "Boost installation directories")




if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.12)
  cmake_policy(SET CMP0074 NEW)  # find_package honors Pkg_ROOT variables 
endif ()

if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.15)
  set(CMAKE_FIND_PACKAGE_PREFER_CONFIG TRUE)  # search for PkgConfig.cmake files first
endif ()


# Find target dependencies

# Temporarily modify CMAKE module path so we can find our custom
# modules for packages that don't have config files

set(SAVED_CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.15)
  list(PREPEND CMAKE_MODULE_PATH @CMAKE_INSTALL_PREFIX@/lib/cmake/wonton/modules)
else ()
  set(CMAKE_MODULE_PATH "@CMAKE_INSTALL_PREFIX@/lib/cmake/wonton/modules;${CMAKE_MODULE_PATH}")
endif ()

include(CMakeFindDependencyMacro)
if (ENABLE_Jali)
  find_dependency(Jali)
  if (TARGET ${Jali_LIBRARIES})
    set_property(TARGET ${Jali_LIBRARIES} PROPERTY IMPORTED_GLOBAL TRUE)
  endif ()
endif ()

find_dependency(Boost)
if (TARGET ${Boost_LIBRARIES})
  set_property(TARGET ${Boost_LIBRARIES} PROPERTY IMPORTED_GLOBAL TRUE)
endif ()

if (LAPACKE_FOUND)
  find_dependency(LAPACKE)   # WILL THIS WORK???
endif ()

# Restore original CMAKE_MODULE_PATH
set(CMAKE_MODULE_PATH ${SAVED_CMAKE_MODULE_PATH})

#
# Import wonton targets
#

include("@CMAKE_INSTALL_PREFIX@/lib/cmake/wonton/wonton-targets.cmake")
